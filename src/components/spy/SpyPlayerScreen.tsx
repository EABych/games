import React, { useState } from 'react';

interface SpyRole {
  playerNumber: number;
  totalPlayers: number;
  isSpy: boolean;
  isLastPlayer: boolean;
  role: string;
  location?: string;
  roleInfo: {
    name: string;
    description: string;
    instruction: string;
  };
}

export const SpyPlayerScreen: React.FC = () => {
  const [playerRole, setPlayerRole] = useState<SpyRole | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');

  const getRoleFromServer = async () => {
    setIsLoading(true);
    setError('');
    
    try {
      const response = await fetch('https://mafia-backend-5z0e.onrender.com/api/spy/get-role');
      
      if (response.ok) {
        const data = await response.json();
        setPlayerRole(data);
      } else {
        const errorData = await response.json();
        setError(errorData.error || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setIsLoading(false);
    }
  };

  const getRoleColor = (isSpy: boolean): string => {
    return isSpy ? '#e74c3c' : '#27ae60';
  };

  const getRoleEmoji = (isSpy: boolean): string => {
    return isSpy ? 'üïµÔ∏è' : 'üè†';
  };

  if (playerRole) {
    return (
      <div className="spy-player-screen">
        <div className="role-card" style={{ borderColor: getRoleColor(playerRole.isSpy) }}>
          <div className="role-header">
            <div className="role-emoji">{getRoleEmoji(playerRole.isSpy)}</div>
            <h2 className="role-name" style={{ color: getRoleColor(playerRole.isSpy) }}>
              {playerRole.roleInfo.name}
            </h2>
            <div className="player-info">
              –ò–≥—Ä–æ–∫ {playerRole.playerNumber} –∏–∑ {playerRole.totalPlayers}
            </div>
          </div>
          
          <div className="role-content">
            <div className="role-description">
              <h3>üìã –í–∞—à–∞ –∑–∞–¥–∞—á–∞:</h3>
              <p>{playerRole.roleInfo.description}</p>
            </div>
            
            {playerRole.location && (
              <div className="location-info">
                <h3>üìç –õ–æ–∫–∞—Ü–∏—è:</h3>
                <div className="location-badge">
                  {playerRole.location}
                </div>
              </div>
            )}
            
            {playerRole.isSpy && (
              <div className="spy-tips">
                <h3>üïµÔ∏è –°–æ–≤–µ—Ç—ã –¥–ª—è —à–ø–∏–æ–Ω–∞:</h3>
                <ul>
                  <li>–°–ª—É—à–∞–π—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤–æ–ø—Ä–æ—Å—ã –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤</li>
                  <li>–ó–∞–¥–∞–≤–∞–π—Ç–µ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –ª–æ–∫–∞—Ü–∏—é</li>
                  <li>–ù–µ –≤—ã–¥–∞–≤–∞–π—Ç–µ —Å–µ–±—è —Å–ª–∏—à–∫–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏</li>
                  <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–Ω—è—Ç—å, –≥–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å</li>
                </ul>
              </div>
            )}
            
            {!playerRole.isSpy && (
              <div className="resident-tips">
                <h3>üë• –°–æ–≤–µ—Ç—ã –¥–ª—è –∂–∏—Ç–µ–ª–µ–π:</h3>
                <ul>
                  <li>–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ –¥–µ—Ç–∞–ª—è—Ö –ª–æ–∫–∞—Ü–∏–∏</li>
                  <li>–ò—â–∏—Ç–µ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç —É–∫–ª–æ–Ω—á–∏–≤–æ</li>
                  <li>–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</li>
                  <li>–ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö</li>
                </ul>
              </div>
            )}
            
            <div className="instruction-info">
              <h3>üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
              <p>{playerRole.roleInfo.instruction}</p>
            </div>
          </div>
          
          <div className="role-footer">
            <div className="warning-message">
              ‚ö†Ô∏è –ó–∞–ø–æ–º–Ω–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å –∏ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –µ—ë –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º!
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="spy-player-screen">
      <div className="welcome-card">
        <div className="welcome-header">
          <h1>üïµÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É –®–ø–∏–æ–Ω!</h1>
          <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å</p>
        </div>
        
        <div className="welcome-content">
          {!isLoading && !error && (
            <>
              <div className="game-rules">
                <h3>üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:</h3>
                <ul>
                  <li>üè† <strong>–ñ–∏—Ç–µ–ª–∏:</strong> –ó–Ω–∞—é—Ç –ª–æ–∫–∞—Ü–∏—é, –∏—â—É—Ç —à–ø–∏–æ–Ω–∞</li>
                  <li>üïµÔ∏è <strong>–®–ø–∏–æ–Ω:</strong> –ù–µ –∑–Ω–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—é, –¥–æ–ª–∂–µ–Ω –µ—ë —É–≥–∞–¥–∞—Ç—å</li>
                  <li>‚ùì <strong>–ü—Ä–æ—Ü–µ—Å—Å:</strong> –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É</li>
                  <li>üèÜ <strong>–ü–æ–±–µ–¥–∞:</strong> –ù–∞–π—Ç–∏ —à–ø–∏–æ–Ω–∞ –∏–ª–∏ —É–≥–∞–¥–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é</li>
                </ul>
              </div>
              
              <button 
                onClick={getRoleFromServer}
                className="get-role-button"
              >
                üé≤ –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å
              </button>
            </>
          )}
          
          {isLoading && (
            <div className="loading-state">
              <div className="loading-spinner"></div>
              <p>–ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å...</p>
            </div>
          )}
          
          {error && (
            <div className="error-state">
              <div className="error-icon">‚ùå</div>
              <h3>–û—à–∏–±–∫–∞</h3>
              <p>{error}</p>
              <button 
                onClick={getRoleFromServer}
                className="retry-button"
              >
                üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};