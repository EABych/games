import React, { useState, useEffect } from 'react';
import QRCode from 'qrcode';
import type { SecretAgentMission, SecretAgentSettings } from '../../types/secret-agent';
import './SecretAgent.css';

interface SecretAgentHostProps {
  roomId: string;
  settings: SecretAgentSettings;
  onBackToSetup: () => void;
}

export const SecretAgentHost: React.FC<SecretAgentHostProps> = ({ 
  roomId, 
  settings, 
  onBackToSetup 
}) => {
  const [qrCodeUrl, setQrCodeUrl] = useState<string>('');
  const [showQR, setShowQR] = useState(false);
  const [hostMissions, setHostMissions] = useState<{cover: SecretAgentMission, main: SecretAgentMission} | null>(null);
  const [hasHostReceivedMissions, setHasHostReceivedMissions] = useState(false);
  const [isLoadingMissions, setIsLoadingMissions] = useState(false);
  const [gameStartTime] = useState(new Date());
  const [currentTime, setCurrentTime] = useState(new Date());

  useEffect(() => {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const generateQRCode = async () => {
      try {
        const playerUrl = `${window.location.origin}/player/secret-agent/${roomId}`;
        const qrDataUrl = await QRCode.toDataURL(playerUrl, {
          width: 256,
          margin: 2,
          color: {
            dark: '#1a1a2e',
            light: '#ffffff'
          }
        });
        setQrCodeUrl(qrDataUrl);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR –∫–æ–¥–∞:', error);
      }
    };

    generateQRCode();
  }, [roomId]);

  useEffect(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 60000);

    return () => clearInterval(timer);
  }, []);

  const handleGetHostMissions = async () => {
    if (!settings.allowHostParticipation) return;
    
    setIsLoadingMissions(true);
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ö–æ—Å—Ç–∞
      const hostUserId = `host_${roomId}`;
      
      const response = await fetch(`https://mafia-backend-5z0e.onrender.com/api/secret-agent/get-missions?roomId=${roomId}&userId=${hostUserId}`);
      if (response.ok) {
        const data = await response.json();
        setHostMissions({
          cover: data.coverMission,
          main: data.mainMission
        });
        setHasHostReceivedMissions(true);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏—Å—Å–∏–π –¥–ª—è —Ö–æ—Å—Ç–∞:', error);
    } finally {
      setIsLoadingMissions(false);
    }
  };

  const getGameTimeRemaining = () => {
    const elapsed = Math.floor((currentTime.getTime() - gameStartTime.getTime()) / (1000 * 60));
    const remaining = Math.max(0, settings.gameDuration - elapsed);
    const hours = Math.floor(remaining / 60);
    const minutes = remaining % 60;
    
    if (hours > 0) {
      return `${hours}—á ${minutes}–º`;
    }
    return `${minutes}–º`;
  };

  const getGameProgress = () => {
    const elapsed = Math.floor((currentTime.getTime() - gameStartTime.getTime()) / (1000 * 60));
    return Math.min(100, (elapsed / settings.gameDuration) * 100);
  };

  return (
    <div className="secret-agent-host">
      <div className="host-header">
        <div className="room-info">
          <h1>–¢–∞–π–Ω—ã–π –∞–≥–µ–Ω—Ç</h1>
          <div className="room-details">
            <div className="room-id">
              <span className="detail-label">ID –º–∏—Å—Å–∏–∏:</span>
              <span className="detail-value">{roomId}</span>
            </div>
            <div className="game-timer">
              <span className="detail-label">‚è∞ –û—Å—Ç–∞–ª–æ—Å—å:</span>
              <span className="detail-value">{getGameTimeRemaining()}</span>
            </div>
          </div>
        </div>
        
        <button 
          className="back-btn"
          onClick={onBackToSetup}
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
        </button>
      </div>

      <div className="game-progress-bar">
        <div 
          className="progress-fill"
          style={{ width: `${getGameProgress()}%` }}
        ></div>
      </div>

      <div className="host-content">
        <div className="qr-section">
          <div className="qr-card">
            <h2>–ê–≥–µ–Ω—Ç—ã: –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–∏ –º–∏—Å—Å–∏–∏!</h2>
            
            {!showQR ? (
              <div className="qr-placeholder">
                <button 
                  className="show-qr-btn"
                  onClick={() => setShowQR(true)}
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥ –∞–≥–µ–Ω—Ç–∞–º
                </button>
                <p className="qr-instruction">
                  –ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–π QR-–∫–æ–¥ –∞–≥–µ–Ω—Ç–∞–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Ö –∑–∞–¥–∞–Ω–∏–π
                </p>
              </div>
            ) : (
              <div className="qr-display">
                {qrCodeUrl && (
                  <img 
                    src={qrCodeUrl} 
                    alt="–°–µ–∫—Ä–µ—Ç–Ω—ã–π QR –∫–æ–¥ –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤" 
                    className="qr-code"
                  />
                )}
                <p className="qr-instruction">
                  –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
                </p>
                <div className="manual-link">
                  <span>–°–µ–∫—Ä–µ—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞:</span>
                  <code>{window.location.origin}/player/secret-agent/{roomId}</code>
                </div>
                <button 
                  className="hide-qr-btn"
                  onClick={() => setShowQR(false)}
                >
                  –°–∫—Ä—ã—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥
                </button>
              </div>
            )}
          </div>
        </div>

        {settings.allowHostParticipation && (
          <div className="host-missions-section">
            <div className="host-missions-card">
              <h2>–ú–∏—Å—Å–∏–∏ –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ</h2>
              
              {!hasHostReceivedMissions ? (
                <div className="get-host-missions">
                  <p>–•–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ–ø–µ—Ä–∞—Ü–∏–∏?</p>
                  <button 
                    className="get-missions-btn"
                    onClick={handleGetHostMissions}
                    disabled={isLoadingMissions}
                  >
                    {isLoadingMissions ? '–ü–æ–ª—É—á–µ–Ω–∏–µ –º–∏—Å—Å–∏–π...' : '–ü–æ–ª—É—á–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –º–∏—Å—Å–∏–∏'}
                  </button>
                </div>
              ) : (
                <div className="host-missions-display">
                  <div className="mission-card cover-mission">
                    <div className="mission-header">
                      <span className="mission-icon">üé≠</span>
                      <span className="mission-type">–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–∏–∫—Ä—ã—Ç–∏—è</span>
                      <span className="mission-difficulty">{hostMissions?.cover.difficulty}</span>
                    </div>
                    <div className="mission-title">{hostMissions?.cover.title}</div>
                    <div className="mission-description">{hostMissions?.cover.description}</div>
                    <div className="mission-note">
                      üí° –í—ã–ø–æ–ª–Ω—è–π –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –≤—Å—é –∏–≥—Ä—É
                    </div>
                  </div>

                  <div className="mission-card main-mission">
                    <div className="mission-header">
                      <span className="mission-icon">–ú–ò–°–°–ò–Ø</span>
                      <span className="mission-type">–ì–ª–∞–≤–Ω–∞—è –º–∏—Å—Å–∏—è</span>
                      <span className="mission-difficulty">{hostMissions?.main.difficulty}</span>
                    </div>
                    <div className="mission-title">{hostMissions?.main.title}</div>
                    <div className="mission-description">{hostMissions?.main.description}</div>
                    <div className="mission-timer">
                      –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {hostMissions?.main.timeLimit} –º–∏–Ω—É—Ç
                    </div>
                    <div className="mission-note">
                      –í—ã–ø–æ–ª–Ω–∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ, –Ω–∏–∫—Ç–æ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–Ω—è—Ç—å —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å 5 –º–∏–Ω—É—Ç
                    </div>
                  </div>
                  
                  <div className="mission-final-note">
                    ‚úÖ –í–∞—à–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –º–∏—Å—Å–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã! –î–µ–π—Å—Ç–≤—É–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, –∞–≥–µ–Ω—Ç.
                  </div>
                </div>
              )}
            </div>
          </div>
        )}

        <div className="game-control-panel">
          <h3>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–µ–π</h3>
          <div className="control-grid">
            <div className="control-item">
              <div className="control-icon">–ò–ì–†–û–ö–ò</div>
              <div className="control-info">
                <div className="control-number">{settings.playerCount}</div>
                <div className="control-label">–ê–≥–µ–Ω—Ç–æ–≤ –≤ –º–∏—Å—Å–∏–∏</div>
              </div>
            </div>
            <div className="control-item">
              <div className="control-icon">‚è∞</div>
              <div className="control-info">
                <div className="control-number">{Math.floor(settings.gameDuration / 60)}—á</div>
                <div className="control-label">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏</div>
              </div>
            </div>
            <div className="control-item">
              <div className="control-icon">–ú–ò–°–°–ò–Ø</div>
              <div className="control-info">
                <div className="control-number">2</div>
                <div className="control-label">–ú–∏—Å—Å–∏–∏ –Ω–∞ –∞–≥–µ–Ω—Ç–∞</div>
              </div>
            </div>
          </div>
        </div>

        <div className="game-tips">
          <h3>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ</h3>
          <div className="tips-list">
            <div className="tip-item">
              <span className="tip-icon">üëÄ</span>
              <span>–ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –∞–≥–µ–Ω—Ç–æ–≤ –∏ –∏—â–∏—Ç–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">üé≠</span>
              <span>–ü–æ–æ—â—Ä—è–π—Ç–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏–π –ø—Ä–∏–∫—Ä—ã—Ç–∏—è</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">1</span>
              <span>–ì–ª–∞–≤–Ω—ã–µ –º–∏—Å—Å–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –∑–∞ 5 –º–∏–Ω—É—Ç</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">üèÜ</span>
              <span>–ê–≥–µ–Ω—Ç –ø–æ–±–µ–∂–¥–∞–µ—Ç –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç –≥–ª–∞–≤–Ω—É—é –º–∏—Å—Å–∏—é –∏–ª–∏ –µ–≥–æ –Ω–µ —Ä–∞—Å–∫—Ä–æ—é—Ç</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">2</span>
              <span>–ü–æ–∑–≤–æ–ª—è–π—Ç–µ –∏–≥—Ä–æ–∫–∞–º —É–≥–∞–¥—ã–≤–∞—Ç—å –º–∏—Å—Å–∏–∏ –¥—Ä—É–≥–∏—Ö –¥–ª—è —Ä–∞–∑–æ–±–ª–∞—á–µ–Ω–∏—è</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};