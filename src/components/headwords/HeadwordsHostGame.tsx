import React, { useState } from 'react';
import { QRCodeModal } from '../mafia/QRCodeModal';
import type { HeadwordsGameSettings } from './HeadwordsHostSetup';

interface HeadwordsHostGameProps {
  settings: HeadwordsGameSettings;
  onBack: () => void;
  onNewGame: () => void;
}

export const HeadwordsHostGame: React.FC<HeadwordsHostGameProps> = ({ settings, onBack, onNewGame }) => {
  const [gameStarted, setGameStarted] = useState<boolean>(false);
  const [serverStatus, setServerStatus] = useState<string>('');
  const [showQRModal, setShowQRModal] = useState<boolean>(false);
  const [currentRole, setCurrentRole] = useState<any>(null);
  const [roomId, setRoomId] = useState<string>('');

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  const createGameOnServer = async () => {
    try {
      // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
      let requestData;
      if (Array.isArray(settings.categories)) {
        requestData = {
          playerCount: settings.playerCount,
          categories: settings.categories
        };
      } else if ((settings as any).category) {
        // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç
        requestData = {
          playerCount: settings.playerCount,
          category: (settings as any).category
        };
      } else {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫:', settings);
        setServerStatus('‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã');
        return;
      }
      
      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã:', requestData);
      
      const response = await fetch('https://mafia-backend-5z0e.onrender.com/api/headwords/generate-game', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestData)
      });

      if (response.ok) {
        const data = await response.json();
        setServerStatus(`‚úÖ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è ${data.playerCount} –∏–≥—Ä–æ–∫–æ–≤. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${data.categoriesDisplay}. ID –∫–æ–º–Ω–∞—Ç—ã: ${data.roomId}`);
        setRoomId(data.roomId);
        setGameStarted(true);
      } else {
        const errorData = await response.json();
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã:', errorData);
        setServerStatus(`‚ùå –û—à–∏–±–∫–∞: ${errorData.error}`);
      }
    } catch (error) {
      setServerStatus('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  // –°–±—Ä–æ—Å –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  const resetGameOnServer = async () => {
    try {
      await fetch('https://mafia-backend-5z0e.onrender.com/api/headwords/reset', {
        method: 'POST'
      });
      setServerStatus('üîÑ –ò–≥—Ä–∞ —Å–±—Ä–æ—à–µ–Ω–∞');
      setGameStarted(false);
      setCurrentRole(null);
      setRoomId('');
    } catch (error) {
      setServerStatus('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∏–≥—Ä—ã');
    }
  };

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –Ω–∞ —ç—Ç–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  const getRoleOnThisDevice = async () => {
    try {
      const url = roomId 
        ? `https://mafia-backend-5z0e.onrender.com/api/headwords/get-role?roomId=${roomId}`
        : 'https://mafia-backend-5z0e.onrender.com/api/headwords/get-role';
      
      const response = await fetch(url);
      
      if (response.ok) {
        const data = await response.json();
        setCurrentRole(data);
      } else {
        const errorData = await response.json();
        setServerStatus(`‚ùå ${errorData.error}`);
      }
    } catch (error) {
      setServerStatus('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏');
    }
  };

  const getCategoryDisplayName = (categoryId: string): string => {
    const displayNames: Record<string, string> = {
      celebrities: '–ó–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–∏',
      cartoons: '–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã',
      movies: '–ö–∏–Ω–æ –∏ —Å–µ—Ä–∏–∞–ª—ã',
      animals: '–ñ–∏–≤–æ—Ç–Ω—ã–µ',
      professions: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏',
      objects: '–ü—Ä–µ–¥–º–µ—Ç—ã'
    };
    
    return displayNames[categoryId] || categoryId;
  };

  if (currentRole) {
    return (
      <div className="headwords-host-game">
        <div className="role-display">
          <div className="role-card">
            <div className="role-header">
              <div className="role-emoji">üé≠</div>
              <h2 className="role-name">–í–∞—à–∞ —Ä–æ–ª—å</h2>
              <div className="player-info">
                –ò–≥—Ä–æ–∫ {currentRole.playerNumber} –∏–∑ {currentRole.totalPlayers}
              </div>
            </div>
            
            <div className="role-content">
              <div className="role-text">
                {currentRole.role}
              </div>
              <div className="category-info">
                –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {currentRole.categoriesDisplay || getCategoryDisplayName(currentRole.category)}
              </div>
            </div>
            
            <div className="role-footer">
              <div className="warning-message">
                ‚ö†Ô∏è –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º!
              </div>
            </div>
          </div>
          
          <div className="game-actions">
            <button onClick={() => setCurrentRole(null)} className="back-to-game-button">
              ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–≥—Ä–µ
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="headwords-host-game">
      <div className="game-header">
        <button onClick={onBack} className="back-button">‚Üê –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
        <h2>üé≠ –í–µ–¥—É—â–∏–π "–°–ª–æ–≤–∞ –Ω–∞ –ª–æ–±"</h2>
        <p>–ò–≥—Ä–æ–∫–æ–≤: {settings.playerCount} | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {settings.categories.map(cat => getCategoryDisplayName(cat)).join(', ')}</p>
      </div>

      <div className="server-status">
        {!gameStarted ? (
          <button onClick={createGameOnServer} className="create-game-button">
            üéØ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
          </button>
        ) : (
          <div className="game-info">
            <p>{serverStatus}</p>
            <div className="player-access-section">
              <h4>üì± –î–æ—Å—Ç—É–ø –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤:</h4>
              <div className="access-buttons">
                <button 
                  onClick={() => setShowQRModal(true)}
                  className="show-qr-button"
                >
                  üì± –ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥
                </button>
                
                <button 
                  onClick={getRoleOnThisDevice}
                  className="get-role-here-button"
                >
                  üé≤ –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –∑–¥–µ—Å—å
                </button>
              </div>
              <p className="access-hint">
                –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –Ω–∞ —ç—Ç–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
              </p>
            </div>
          </div>
        )}
      </div>

      <div className="game-management">
        <button onClick={resetGameOnServer} className="reset-game-button">
          üÜï –ù–æ–≤–∞—è –∏–≥—Ä–∞ (—Å–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª–∏)
        </button>
        
        <button onClick={onNewGame} className="new-setup-button">
          ‚öôÔ∏è –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </button>
      </div>

      <div className="instructions">
        <h3>üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
        <ul>
          <li>–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</li>
          <li>–î–∞–π—Ç–µ –∏–≥—Ä–æ–∫–∞–º –¥–æ—Å—Ç—É–ø –∫ —Ä–æ–ª—è–º —á–µ—Ä–µ–∑ QR-–∫–æ–¥ –∏–ª–∏ –Ω–∞ —ç—Ç–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ</li>
          <li>–ò–≥—Ä–æ–∫–∏ —É–≤–∏–¥—è—Ç —Ç–∞–π–º–µ—Ä, –∑–∞—Ç–µ–º —Ä–æ–ª—å –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ</li>
          <li>–ò–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ –ª–±—É –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ</li>
          <li>–û—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∏–¥—è—Ç —Ä–æ–ª—å –∏ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–≥—Ä–æ–∫–∞</li>
        </ul>
      </div>

      <QRCodeModal 
        isOpen={showQRModal}
        onClose={() => setShowQRModal(false)}
        roomId={roomId}
        gameType="headwords"
      />
    </div>
  );
};