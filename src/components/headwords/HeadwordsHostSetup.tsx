import React, { useState, useEffect } from 'react';

export interface HeadwordsGameSettings {
  playerCount: number;
  categories: string[];
}

interface HeadwordsCategory {
  id: string;
  name: string;
  rolesCount: number;
}

interface HeadwordsHostSetupProps {
  onGameStart: (settings: HeadwordsGameSettings) => void;
}

export const HeadwordsHostSetup: React.FC<HeadwordsHostSetupProps> = ({ onGameStart }) => {
  const [playerCount, setPlayerCount] = useState<number>(4);
  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);
  const [categories, setCategories] = useState<HeadwordsCategory[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(false);

  useEffect(() => {
    fetchCategories();
  }, []);

  const fetchCategories = async () => {
    try {
      const response = await fetch('https://mafia-backend-5z0e.onrender.com/api/headwords/categories');
      if (response.ok) {
        const data = await response.json();
        setCategories(data.categories);
        if (data.categories.length > 0) {
          console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', data.categories);
          setSelectedCategories([data.categories[0].id]);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    }
  };

  const handlePlayerCountChange = (delta: number) => {
    const newCount = playerCount + delta;
    if (newCount >= 2 && newCount <= 20) {
      setPlayerCount(newCount);
    }
  };

  const toggleCategory = (categoryId: string) => {
    setSelectedCategories(prev => {
      if (prev.includes(categoryId)) {
        return prev.filter(id => id !== categoryId);
      } else {
        return [...prev, categoryId];
      }
    });
  };

  const handleStartGame = () => {
    if (selectedCategories.length === 0) return;
    
    const gameSettings = {
      playerCount,
      categories: selectedCategories
    };
    
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:', gameSettings);
    setIsLoading(true);
    onGameStart(gameSettings);
  };

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
  const selectedCategoriesData = categories.filter(cat => selectedCategories.includes(cat.id));
  const totalAvailableRoles = selectedCategoriesData.reduce((total, cat) => total + cat.rolesCount, 0);
  // –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã (–ø—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞)
  const estimatedUniqueRoles = Math.min(totalAvailableRoles, selectedCategories.length > 1 ? totalAvailableRoles * 0.9 : totalAvailableRoles);
  
  const canStart = selectedCategories.length > 0 && playerCount >= 2 && playerCount <= 20 && 
                   playerCount <= estimatedUniqueRoles;

  return (
    <div className="headwords-host-setup">
      <div className="setup-header">
        <h2>üé≠ –°–ª–æ–≤–∞ –Ω–∞ –ª–æ–±</h2>
        <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã</p>
      </div>

      <div className="setup-content">
        <div className="setting-section">
          <h3>üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤</h3>
          <div className="player-count-controls">
            <button 
              onClick={() => handlePlayerCountChange(-1)}
              className="count-button"
              disabled={playerCount <= 2}
            >
              ‚àí
            </button>
            <span className="player-count">{playerCount}</span>
            <button 
              onClick={() => handlePlayerCountChange(1)}
              className="count-button"
              disabled={playerCount >= 20 || playerCount >= estimatedUniqueRoles}
            >
              +
            </button>
          </div>
          <p className="player-count-hint">
            –û—Ç 2 –¥–æ {Math.min(20, Math.floor(estimatedUniqueRoles))} –∏–≥—Ä–æ–∫–æ–≤
            {selectedCategories.length > 0 && ` (–¥–æ—Å—Ç—É–ø–Ω–æ ~${Math.floor(estimatedUniqueRoles)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π)`}
          </p>
        </div>

        <div className="setting-section">
          <h3>üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
          <p className="multi-select-hint">–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è</p>
          <div className="category-grid">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => toggleCategory(category.id)}
                className={`category-button ${selectedCategories.includes(category.id) ? 'selected' : ''}`}
              >
                <div className="category-name">{category.name}</div>
                <div className="category-count">{category.rolesCount} —Ä–æ–ª–µ–π</div>
                {selectedCategories.includes(category.id) && (
                  <div className="category-checkmark">‚úì</div>
                )}
              </button>
            ))}
          </div>
          {selectedCategories.length > 0 && (
            <p className="category-hint">
              –í—ã–±—Ä–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {selectedCategoriesData.map(cat => cat.name).join(', ')}
              <br />
              –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π: ~{Math.floor(estimatedUniqueRoles)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö
            </p>
          )}
          {selectedCategories.length === 0 && (
            <p className="warning-message">
              –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            </p>
          )}
        </div>

        <div className="game-rules">
          <h3>üìñ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</h3>
          <ul>
            <li>üì± –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç —Ä–æ–ª—å —á–µ—Ä–µ–∑ QR-–∫–æ–¥</li>
            <li>‚è∞ –ï—Å—Ç—å —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ –ª–±—É</li>
            <li>üëÅÔ∏è –í—Å–µ –≤–∏–¥—è—Ç —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞, –∫—Ä–æ–º–µ –Ω–µ–≥–æ —Å–∞–º–æ–≥–æ</li>
            <li>‚ùì –ò–≥—Ä–æ–∫ –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã —É–≥–∞–¥–∞—Ç—å —Å–≤–æ—é —Ä–æ–ª—å</li>
            <li>üéØ –¶–µ–ª—å: —É–≥–∞–¥–∞—Ç—å, –∫—Ç–æ —Ç—ã, –∑–∞–¥–∞–≤–∞—è –≤–æ–ø—Ä–æ—Å—ã "–¥–∞/–Ω–µ—Ç"</li>
          </ul>
        </div>

        <div className="start-section">
          <button 
            onClick={handleStartGame}
            disabled={!canStart || isLoading}
            className="start-game-button"
          >
            {isLoading ? 'üîÑ –°–æ–∑–¥–∞–Ω–∏–µ...' : 'üéÆ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É'}
          </button>
          
          {!canStart && (
            <p className="warning-message">
              {selectedCategories.length === 0 
                ? '–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
                : playerCount > estimatedUniqueRoles 
                ? `–í –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è ${playerCount} –∏–≥—Ä–æ–∫–æ–≤ (–¥–æ—Å—Ç—É–ø–Ω–æ: ~${Math.floor(estimatedUniqueRoles)})`
                : '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã'
              }
            </p>
          )}
        </div>
      </div>
    </div>
  );
};