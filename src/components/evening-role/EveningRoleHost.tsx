import React, { useState, useEffect } from 'react';
import QRCode from 'qrcode';
import type { EveningRoleTask } from '../../types/evening-role';
import './EveningRole.css';

interface EveningRoleHostProps {
  roomId: string;
  onBackToSetup: () => void;
}

export const EveningRoleHost: React.FC<EveningRoleHostProps> = ({ roomId, onBackToSetup }) => {
  const [qrCodeUrl, setQrCodeUrl] = useState<string>('');
  const [showQR, setShowQR] = useState(false);
  const [groupTask, setGroupTask] = useState<EveningRoleTask | null>(null);
  const [hostTask, setHostTask] = useState<EveningRoleTask | null>(null);
  const [hasHostReceivedTask, setHasHostReceivedTask] = useState(false);
  const [isLoadingGroupTask, setIsLoadingGroupTask] = useState(false);
  const [isLoadingHostTask, setIsLoadingHostTask] = useState(false);

  useEffect(() => {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const generateQRCode = async () => {
      try {
        const playerUrl = `${window.location.origin}/player/evening-role/${roomId}`;
        const qrDataUrl = await QRCode.toDataURL(playerUrl, {
          width: 256,
          margin: 2,
          color: {
            dark: '#1d1d1f',
            light: '#ffffff'
          }
        });
        setQrCodeUrl(qrDataUrl);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR –∫–æ–¥–∞:', error);
      }
    };

    generateQRCode();
  }, [roomId]);

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤–æ–µ –≥—Ä—É–ø–ø–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    loadGroupTask();
  }, []);

  const loadGroupTask = async () => {
    setIsLoadingGroupTask(true);
    try {
      const response = await fetch('https://mafia-backend-5z0e.onrender.com/api/evening-role/get-group-task');
      if (response.ok) {
        const data = await response.json();
        setGroupTask(data.task);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è:', error);
    } finally {
      setIsLoadingGroupTask(false);
    }
  };

  const handleGenerateNewGroupTask = async () => {
    await loadGroupTask();
  };

  const handleGetHostTask = async () => {
    setIsLoadingHostTask(true);
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ö–æ—Å—Ç–∞
      const hostUserId = `host_${roomId}`;
      
      const response = await fetch(`https://mafia-backend-5z0e.onrender.com/api/evening-role/get-task?roomId=${roomId}&userId=${hostUserId}`);
      if (response.ok) {
        const data = await response.json();
        setHostTask(data.task);
        setHasHostReceivedTask(true);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –¥–ª—è —Ö–æ—Å—Ç–∞:', error);
    } finally {
      setIsLoadingHostTask(false);
    }
  };

  return (
    <div className="evening-role-host">
      <div className="host-header">
        <div className="room-info">
          <h1>–†–æ–ª—å –Ω–∞ –≤–µ—á–µ—Ä</h1>
          <div className="room-id">ID –∫–æ–º–Ω–∞—Ç—ã: <span>{roomId}</span></div>
        </div>
        
        <button 
          className="back-btn"
          onClick={onBackToSetup}
        >
          –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
        </button>
      </div>

      <div className="host-content">
        <div className="qr-section">
          <div className="qr-card">
            <h2>–£—á–∞—Å—Ç–Ω–∏–∫–∏: –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å!</h2>
            
            {!showQR ? (
              <div className="qr-placeholder">
                <button 
                  className="show-qr-btn"
                  onClick={() => setShowQR(true)}
                >
                  üì± –ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
                </button>
                <p className="qr-instruction">
                  –ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Ö –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
                </p>
              </div>
            ) : (
              <div className="qr-display">
                {qrCodeUrl && (
                  <img 
                    src={qrCodeUrl} 
                    alt="QR –∫–æ–¥ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" 
                    className="qr-code"
                  />
                )}
                <p className="qr-instruction">
                  –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
                </p>
                <div className="manual-link">
                  <span>–ò–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:</span>
                  <code>{window.location.origin}/player/evening-role/{roomId}</code>
                </div>
                <button 
                  className="hide-qr-btn"
                  onClick={() => setShowQR(false)}
                >
                  –°–∫—Ä—ã—Ç—å QR-–∫–æ–¥
                </button>
              </div>
            )}
          </div>
        </div>

        <div className="group-task-section">
          <div className="group-task-card">
            <h2>–û–±—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ–π –∫–æ–º–ø–∞–Ω–∏–∏</h2>
            
            {isLoadingGroupTask ? (
              <div className="no-group-task">
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è...</p>
              </div>
            ) : groupTask ? (
              <div className="current-group-task">
                <div className="task-content">
                  <p className="task-text">{groupTask.text}</p>
                  {groupTask.hasTimer && groupTask.timerDuration && (
                    <div className="task-timer-info">
                      ‚è±Ô∏è –ó–∞–¥–∞–Ω–∏–µ —Å —Ç–∞–π–º–µ—Ä–æ–º: {Math.round(groupTask.timerDuration / 60)} –º–∏–Ω
                    </div>
                  )}
                </div>
                
                <button 
                  className="new-group-task-btn"
                  onClick={handleGenerateNewGroupTask}
                  disabled={isLoadingGroupTask}
                >
                  üé≤ –ù–æ–≤–æ–µ –æ–±—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
                </button>
              </div>
            ) : (
              <div className="no-group-task">
                <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞–Ω–∏—è</p>
                <button 
                  className="new-group-task-btn"
                  onClick={handleGenerateNewGroupTask}
                  disabled={isLoadingGroupTask}
                >
                  üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
              </div>
            )}
          </div>
        </div>

        <div className="host-task-section">
          <div className="host-task-card">
            <h2>–†–æ–ª—å –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ</h2>
            
            {!hasHostReceivedTask ? (
              <div className="get-host-task">
                <p>–•–æ—Ç–∏—Ç–µ —Ç–æ–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–µ?</p>
                <button 
                  className="get-host-task-btn"
                  onClick={handleGetHostTask}
                  disabled={isLoadingHostTask}
                >
                  {isLoadingHostTask ? '‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏...' : 'üé≠ –ü–æ–ª—É—á–∏—Ç—å –º–æ—é —Ä–æ–ª—å'}
                </button>
              </div>
            ) : (
              <div className="host-task-display">
                <div className="task-content">
                  <p className="task-text">{hostTask?.text}</p>
                  {hostTask?.requiresOtherPlayer && (
                    <div className="task-note">
                      üí° –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
                    </div>
                  )}
                  {hostTask?.hasTimer && hostTask.timerDuration && (
                    <div className="task-timer-info">
                      ‚è±Ô∏è –ó–∞–¥–∞–Ω–∏–µ —Å —Ç–∞–π–º–µ—Ä–æ–º: {Math.round(hostTask.timerDuration / 60)} –º–∏–Ω
                    </div>
                  )}
                </div>
                
                <div className="host-task-info">
                  <p className="task-final-note">
                    ‚úÖ –í–∞—à–∞ —Ä–æ–ª—å –ø–æ–ª—É—á–µ–Ω–∞! –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –µ—ë –≤–µ—Å—å –≤–µ—á–µ—Ä.
                  </p>
                </div>
              </div>
            )}
          </div>
        </div>

        <div className="game-stats">
          <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ</h3>
          <div className="stats-grid">
            <div className="stat-item">
              <div className="stat-number">125+</div>
              <div className="stat-label">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π</div>
            </div>
            <div className="stat-item">
              <div className="stat-number">60+</div>
              <div className="stat-label">–ì—Ä—É–ø–ø–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π</div>
            </div>
            <div className="stat-item">
              <div className="stat-number">{roomId}</div>
              <div className="stat-label">ID –∫–æ–º–Ω–∞—Ç—ã</div>
            </div>
          </div>
        </div>

        <div className="game-tips">
          <h3>–°–æ–≤–µ—Ç—ã –≤–µ–¥—É—â–µ–º—É</h3>
          <div className="tips-list">
            <div className="tip-item">
              <span className="tip-icon">üí°</span>
              <span>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –æ–±—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤—Å–µ–π –∫–æ–º–ø–∞–Ω–∏–µ–π</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">üé≠</span>
              <span>–ü–æ–æ—â—Ä—è–π—Ç–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">‚è∞</span>
              <span>–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏–º–µ—é—Ç —Ç–∞–π–º–µ—Ä—ã - —É—á–∞—Å—Ç–Ω–∏–∫–∏ —É–≤–∏–¥—è—Ç –∏—Ö –Ω–∞ —Å–≤–æ–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö</span>
            </div>
            <div className="tip-item">
              <span className="tip-icon">üîÑ</span>
              <span>–ú–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—â–∏–µ –∑–∞–¥–∞–Ω–∏—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};