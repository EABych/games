import express from 'express';
import cors from 'cors';

const app = express();

// CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è GitHub Pages
app.use(cors({
  origin: ['https://elenabyckova.github.io', 'http://localhost:5173', 'http://localhost:3000'],
  methods: ['GET', 'POST'],
  credentials: true
}));

app.use(express.json());

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π
let currentRoles = [];
let roleIndex = 0;

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–æ–ª–µ–π –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –ú–∞—Ñ–∏–∏
function generateRoles(playerCount, settings = {}) {
  const {
    includeDoctor = true,
    includeDetective = true,
    includeSheriff = false,
    includeDon = false
  } = settings;

  if (playerCount < 4 || playerCount > 20) {
    throw new Error('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 4 –¥–æ 20');
  }

  const roles = [];
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ñ–∏–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ 1/3)
  const mafiaCount = Math.floor(playerCount / 3);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ñ–∏—é
  for (let i = 0; i < mafiaCount; i++) {
    if (i === 0 && includeDon) {
      roles.push('don'); // –î–æ–Ω –º–∞—Ñ–∏–∏
    } else {
      roles.push('mafia');
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏
  let specialRolesAdded = 0;
  
  if (includeDetective && playerCount >= 5) {
    roles.push('detective');
    specialRolesAdded++;
  }
  
  if (includeSheriff && playerCount >= 6 && !includeDetective) {
    roles.push('sheriff');
    specialRolesAdded++;
  }
  
  if (includeDoctor && playerCount >= 6) {
    roles.push('doctor');
    specialRolesAdded++;
  }
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –º–∏—Ä–Ω—ã–º–∏ –∂–∏—Ç–µ–ª—è–º–∏
  const citizensNeeded = playerCount - mafiaCount - specialRolesAdded;
  for (let i = 0; i < citizensNeeded; i++) {
    roles.push('citizen');
  }
  
  // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Ä–æ–ª–∏
  return roles.sort(() => Math.random() - 0.5);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–æ–ª–∏
function getRoleInfo(role) {
  const roleDescriptions = {
    'citizen': {
      name: '–ú–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å',
      description: '–í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–π—Ç–∏ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –≤—Å—é –º–∞—Ñ–∏—é',
      team: 'citizens',
      nightAction: false
    },
    'mafia': {
      name: '–ú–∞—Ñ–∏—è',
      description: '–£–±–∏–≤–∞–π—Ç–µ –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π –Ω–æ—á—å—é –∏ —Å–∫—Ä—ã–≤–∞–π—Ç–µ—Å—å –¥–Ω–µ–º',
      team: 'mafia',
      nightAction: true
    },
    'don': {
      name: '–î–æ–Ω –º–∞—Ñ–∏–∏',
      description: '–õ–∏–¥–µ—Ä –º–∞—Ñ–∏–∏. –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥—ã',
      team: 'mafia',
      nightAction: true
    },
    'doctor': {
      name: '–î–æ–∫—Ç–æ—Ä',
      description: '–õ–µ—á–∏—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –Ω–æ—á—å—é, –º–æ–∂–µ—Ç–µ —Å–ø–∞—Å—Ç–∏ –æ—Ç —É–±–∏–π—Å—Ç–≤–∞',
      team: 'citizens',
      nightAction: true
    },
    'detective': {
      name: '–î–µ—Ç–µ–∫—Ç–∏–≤',
      description: '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –Ω–æ—á—å—é –Ω–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∫ –º–∞—Ñ–∏–∏',
      team: 'citizens',
      nightAction: true
    },
    'sheriff': {
      name: '–®–µ—Ä–∏—Ñ',
      description: '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –Ω–æ—á—å—é –∏ –∑–∞—â–∏—â–∞–π—Ç–µ –≥–æ—Ä–æ–¥',
      team: 'citizens',
      nightAction: true
    }
  };
  
  return roleDescriptions[role] || roleDescriptions['citizen'];
}

// Health check endpoint –¥–ª—è Render
app.get('/', (req, res) => {
  res.json({ 
    status: 'online',
    currentGame: {
      totalRoles: currentRoles.length,
      rolesGiven: roleIndex,
      rolesRemaining: Math.max(0, currentRoles.length - roleIndex)
    },
    timestamp: new Date().toISOString()
  });
});

// –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
app.post('/api/mafia/generate-roles', (req, res) => {
  try {
    const { playerCount, settings = {} } = req.body;
    
    if (!playerCount || typeof playerCount !== 'number') {
      return res.status(400).json({ 
        error: '–¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤' 
      });
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π (—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π)
    currentRoles = generateRoles(playerCount, settings);
    roleIndex = 0;
    
    console.log(`–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Ä–æ–ª–∏ –¥–ª—è ${playerCount} –∏–≥—Ä–æ–∫–æ–≤:`, currentRoles);
    
    res.json({
      success: true,
      message: `–†–æ–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è ${playerCount} –∏–≥—Ä–æ–∫–æ–≤`,
      playerCount,
      totalRoles: currentRoles.length,
      mafiaCount: currentRoles.filter(role => role === 'mafia' || role === 'don').length,
      citizensCount: currentRoles.filter(role => ['citizen', 'doctor', 'detective', 'sheriff'].includes(role)).length
    });
    
  } catch (error) {
    res.status(400).json({ 
      error: error.message 
    });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å
app.get('/api/mafia/get-role', (req, res) => {
  try {
    if (currentRoles.length === 0) {
      return res.status(404).json({ 
        error: '–†–æ–ª–∏ –Ω–µ –±—ã–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π.' 
      });
    }
    
    if (roleIndex >= currentRoles.length) {
      return res.status(404).json({ 
        error: '–í—Å–µ —Ä–æ–ª–∏ —É–∂–µ —Ä–æ–∑–¥–∞–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π.' 
      });
    }
    
    const role = currentRoles[roleIndex];
    const roleInfo = getRoleInfo(role);
    roleIndex++;
    
    console.log(`–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å: ${role} (${roleIndex}/${currentRoles.length})`);
    
    res.json({
      role,
      roleInfo,
      playerNumber: roleIndex,
      totalPlayers: currentRoles.length,
      isLastPlayer: roleIndex === currentRoles.length
    });
    
  } catch (error) {
    res.status(500).json({ 
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–∏' 
    });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
app.get('/api/mafia/status', (req, res) => {
  res.json({
    hasActiveGame: currentRoles.length > 0,
    totalRoles: currentRoles.length,
    rolesGiven: roleIndex,
    rolesRemaining: Math.max(0, currentRoles.length - roleIndex),
    allRolesGiven: roleIndex >= currentRoles.length
  });
});

// –°–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É
app.post('/api/mafia/reset', (req, res) => {
  currentRoles = [];
  roleIndex = 0;
  
  console.log('–ò–≥—Ä–∞ —Å–±—Ä–æ—à–µ–Ω–∞');
  
  res.json({
    success: true,
    message: '–ò–≥—Ä–∞ —Å–±—Ä–æ—à–µ–Ω–∞'
  });
});

const PORT = process.env.PORT || 3001;

app.listen(PORT, () => {
  console.log(`üé≠ Mafia Roles Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:`);
  console.log(`   POST /api/mafia/generate-roles - –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π`);
  console.log(`   GET  /api/mafia/get-role - –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å`);
  console.log(`   GET  /api/mafia/status - –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã`);
  console.log(`   POST /api/mafia/reset - –°–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É`);
});